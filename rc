" Mapping {{{1 
"" scroll more
nmap -builtin j 10j
nmap -builtin k 10k

"" swap d/D
nmap -builtin d D
nmap -builtin D d
nmap -builtin gd :js config.tabbrowser.removeTab(tabs.getTab())<CR>

"" swap y/Y
"nmap -builtin y Y
"nmap -builtin Y y

"" swap p/P
nmap -builtin p P
nmap -builtin P p

"" J/K move left/right
"nmap -builtin J h
"nmap -builtin K l

"" w/e switch tabs
nmap -builtin w <C-p>
nmap -builtin e <C-n>

"" back/forward
nmap -builtin h <C-o>
nmap -builtin l <C-i>

"" left/right
nmap -builtin <C-o> 10<Right>
nmap -builtin <C-i> 10<Left>

"" prev selected tab
nmap -builtin x <C-^>

"" <M-i> focus on input
"nmap -builtin <M-i> gi

"" U list closed tabs
nmap -builtin U :undo<Space>

"" toggle menubar and toolbar
nmap -builtin -ex ,M :set guioptions!=mT

"" viewsource in new tab
nmap -builtin -ex gf :tab viewsource

"" swap full zoom and text zoom mapping
nmap -builtin zi ZI
nmap -builtin zm ZM
nmap -builtin zo ZO
nmap -builtin zr ZR
nmap -builtin zz zZ
nmap -builtin ZI zi
nmap -builtin ZM zm
nmap -builtin ZO zo
nmap -builtin ZR zr
nmap -builtin zZ zz

"" open addons manager
nmap -builtin -ex ,a :dialog addons

"" rehash
nmap -builtin -ex ,R :rehash

"" private mode
nmap -builtin ,p :private winopen<Space>

"" fullscreen
nmap -builtin -ex ,F :set fullscreen!

"" display download
nmap -builtin -ex ,d :downloads

"" about:config
nmap -builtin -ex ,c :tabopen about:config

"" auto add -tags option when adding bookmark
" nmap -builtin a a<Space>-tags<Space>

"" tabgroup
if config.OS.isMacOSX
nmap -builtin ,e <S-M-e>
else
nmap -builtin ,e <S-C-e>
endif

"" jumping at hint mode, see http://code.google.com/p/dactyl/issues/detail?id=158
"map -modes hints j     -ex normal! 10j
"map -modes hints k     -ex normal! 10k
map -modes hints <C-f> -ex normal! <C-f>
map -modes hints <C-b> -ex normal! <C-b>
"map -modes hints gg    -ex normal! gg
"map -modes hints G     -ex normal! G

"" focus on main frame
nmap -builtin gw ;F1<CR>

" Searching {{{1
"" from http://www.slimeden.com/2011/03/firefox/pentadactyl
":map t -js content.getSelection().toString()!=""?dactyl.execute("tabopen "+ content.getSelection()):CommandExMode().open("tabopen ")
":map o -js content.getSelection().toString()!=""?dactyl.execute("open "+ content.getSelection()):CommandExMode().open("open ")
command -nargs=* -complete=search search execute 'tabopen <args> ' + content.getSelection().toString()
map s :search<Space>
command -nargs=? -complete=search switchSearch execute 'open <args> ' + (buffer.lastInputField?buffer.lastInputField.value:'')
map S gi<ESC> :switchSearch<Space>
command -nargs=* siteSearch execute "tabopen <args> site:" + window.content.location.hostname

set defsearch=g

" Option {{{1
"" ]]/[[ turn next/previous page
set nextpattern&
set nextpattern^='[下后]\s*一?\s*[页张个篇章頁]','\bolder\s*posts\b','^→$'
set previouspattern&
set previouspattern^='[上前]\s*一?\s*[页张个篇章頁]','\bnewer\s*posts\b','^←$'

"" do not display right scrollbar and commandline
"set guioptions+=n
set guioptions=sn

"" open things at new tab
set newtab=all

"" only show the tab bar when there are multiple tabs
set showtabline=multitab
"" Firefox 23 remove browser.tabs.autoHide pref, https://bugzil.la/855370
"" kang code from https://addons.mozilla.org/en-US/firefox/addon/hide-tab-bar-with-one-tab/
js <<EOF
if (config.haveGecko("23")) {
    let setTabsVisible = function (mutations) {
        document.getElementById("tabbrowser-tabs").visible = gBrowser.visibleTabs.length !== 1;
    }
    setTabsVisible();
    let observer = new MutationObserver(setTabsVisible);
    observer.observe(document.querySelector('#tabbrowser-tabs'), { attributes: true });
}
EOF

"" highlight search
"set hlfind

"" complete search engine suguest
set complete=location,suggestion

"" allow popups popup
"set popups=tab,resized

"" home row as hintkeys
"set hintkeys=asdfg;lkjh
"set hintkeys="4;/.123"

"" only follow hints when press enter
"set followhints=1

"" disable annoying auto focus
set strictfocus^=tao123.com:despotic

"" disable smooth scroll
"set scrollsteps=1
"set scrolltime=0

set maxitems=10

"" press tab to begin completion of :open :tabopen cmd
"set autocomplete=!/ex/(tab)?open,.?

"" gerrit
set passkeys+='^https?://(review|scm|gerrit)\..*/#/':'/?ojksOur',ga,gc,gd,gi,gm,go,gs,gw

" Command {{{1
" smart reload {{{2
command smartReload -js <<EOF
if (buffer.URL.spec.contains('#')) {
    dactyl.execute("reload");
} else {
    dactyl.open(buffer.URL.spec);
}
EOF
nmap -builtin r :smartReload<CR>

" flush browser dns {{{2
command flushdns set! network.dnsCacheExpiration=0 | set! network.dnsCacheExpiration&

" use you-get/mpv to download and play video {{{2
command! omniplay -nargs=? -count -js <<EOF
let omniplay = function(url) {
    io.run('omniplay', [url]);
};
let url = args.length ? args[0] : buffer.URL.spec;
omniplay(url);
EOF
group -locations http://v.youku.com/v_show/*,http://www.iqiyi.com/v_* omniplay
nmap -builtin -ex ge <count>omniplay
group user

" use mpv to play video {{{2
command! mpv -nargs=? -count -js <<EOF
let url = args.length ? args[0] : buffer.URL.spec;
let format = '--ytdl-format=';
if (count) {
    format += ['', 'mp4', 'webm', 'worst'][count];
} else {
    format += 'best';
}
io.run('mpv', ['--profile=pseudo-gui', '--cache=no', '--fs', format, url]);
EOF
nmap -builtin -ex ,m <count>mpv
js <<EOF
hints.addMode("m", "Open link using mpv", function (elem) {
    io.run('mpv', ['--profile=pseudo-gui', '--cache=no', '--fs', elem.href]);
});
EOF

" focus on bilibili player {{{2
command! biliplayer -js <<EOF
buffer.win.document.getElementById('bofqi').scrollIntoView();
EOF
group -locations http://www.bilibili.com/* biliplayer
nmap -builtin -ex ge biliplayer
group user

" open chdbits torrent {{{2
command! chdbits -js <<EOF
let chdbits = function (url) {
    let torrent = 'http://chdbits.org/download.php?id=' + url.match(/\?id=([0-9]+)/)[1];
    let tmpFile = io.createTempFile('torrent');
    buffer.saveURI(util.newURI(torrent), tmpFile, function() {
        tmpFile.launch();
    });
}
chdbits(buffer.URL.spec);
EOF
group -locations http://chdbits.org/details.php?id=* chdbits
nmap -builtin -ex ge :chdbits
group user

" open using external browser {{{2
command! openEx -nargs=? -js <<EOF
let url = args.length ? args[0] : buffer.URL.spec;
if (config.OS.isMacOSX) {
    io.run('open', ['-a', 'Safari', url]);
} else if (config.OS.isUnix) {
    io.run('chromium', [url]);
} else {
    dactyl.open(url, dactyl.NEW_TAB);
}
EOF
nmap -builtin -ex ge :openEx

" yank gerrit {{{2
command! yankgerrit -js <<EOF
let title = buffer.doc.getElementsByClassName("changeScreenDescription")[0].innerHTML
dactyl.clipboardWrite("# " + title + "\n" + buffer.URL.spec);
dactyl.echo("Yank " + title);
EOF
group -locations http://review.cyanogenmod.org/#/c/* gerrit
nmap -builtin -ex y :yankgerrit
group user

"" Open current page in google webcache
command webcache -js <<EOF
dactyl.open('https://webcache.googleusercontent.com/search?strip=1&q=cache:'
    + encodeURIComponent(String.replace(buffer.URL.spec, /^https?:\/\//, '')))
EOF
nmap -builtin -ex gc :webcache

" toggle http/https {{{2
command https -js <<EOF
if (buffer.URL.spec.startsWith('http://')) {
    dactyl.open(String.replace(buffer.URL.spec, /^http/i, 'https'));
} else if (buffer.URL.spec.startsWith('https://')) {
    dactyl.open(String.replace(buffer.URL.spec, /^https/i, 'http'));
}
EOF
nmap -builtin -ex gs :https

" toggle reader mode
command! reader -js <<EOF
if (buffer.URL.spec.startsWith('about:reader?')) {
    dactyl.execute('back')
} else {
    dactyl.open('about:reader?url=' + encodeURIComponent(buffer.URL.spec))
}
EOF
nmap -builtin -ex gr :reader

" display calenda {{{2
"command cal -js dactyl.echo(<datepicker type="grid" xmlns={XUL}/>)

" google translate {{{2
command trans -js <<EOF
let getParameterByName = function(url, name) {
    let mname = name.replace(/[\[]/, '\\\[').replace(/[\]]/, '\\\]');
    let regexS = '[\\?&]' + mname + '=([^&#]*)';
    let regex = new RegExp(regexS);
    let results = regex.exec(url);
    if (results == null)
        return '';
    else
        return decodeURIComponent(results[1].replace(/\+/g, ' '));
};
if (buffer.URL.spec.startsWith('http://translate.google.com/')) {
    dactyl.open(getParameterByName(buffer.URL.spec, 'u'));
} else {
    dactyl.open('http://translate.google.com/translate?hl=en&sl=auto&tl=en&u=' + encodeURIComponent(buffer.URL.spec));
}
EOF
nmap -builtin -ex ,t :trans

" jump to source {{{2
"" jump to a command, mapping or option source definition, from https://gist.github.com/3331062
command jumptodef,jd -literal=1 -nargs=1 -complete help -js <<EOF
let sourceLocation = function(str) {
    let mapping = function(s) {
        let [, mc, key] = /(?:(.)_)?(.*)/.exec(s);
        return mappings.get(mc ? modes.modeChars[mc] : modes.NORMAL, key) ||
            dactyl.echoerr("Bad bad: " + s);
    };
    if (isArray(str))
        str = str[0];
    let frame = ((str[0] === ":") ? commands.get(str.substr(1)) :
        /'.*?'/.test(str) ? options.get(str.slice(1,-1)) :
        mapping(str)).definedAt;
    return { url: util.fixURI(frame.filename), line: frame.lineNumber };
};
//buffer.viewSource(sourceLocation(args[0]));
let loc = sourceLocation(args[0]);
window.openDialog("chrome://global/content/viewSource.xul",
    "_blank", "all,dialog=no",
    loc.url, null, null, loc.line);
EOF

" delete duplicate tabs {{{2
command -description "Delete duplicate tabs" tabcloseduplicates,tabclosed -js <<EOF
let seen = {}, vtabs = tabs.visibleTabs, i = vtabs.length;
while (i--) {
    let loc = vtabs[i].linkedBrowser.contentDocument.location.href || "";
    if (Object.prototype.hasOwnProperty.call(seen, loc)) {
        config.tabbrowser.removeTab(vtabs[i]);
    } else {
        seen[loc] = true;
    }
}
EOF
nmap -builtin -ex ,D :tabcloseduplicates

" ramback {{{2
" kanged from https://addons.mozilla.org/en-US/firefox/addon/ramback/
command! ramback -js <<EOF
let observerService = Components.classes["@mozilla.org/observer-service;1"].getService(Components.interfaces.nsIObserverService);
observerService.notifyObservers(null, "memory-pressure", "heap-minimize");
observerService.notifyObservers(null, "memory-pressure", "heap-minimize");
observerService.notifyObservers(null, "memory-pressure", "heap-minimize");
observerService.notifyObservers(null, "dump-mem-stats", "clean up, pig!");
EOF

" toggle auto load plugins {{{2
command! pluginstoggle -description "Allow/unset plugins permission for current site" -js <<EOF
if (services.permissions.testPermission(buffer.uri, "plugins") !== Sanitizer.PERMS["allow"]) {
    dactyl.echo("ALLOW plugins permission for " + buffer.uri.host);
    services.permissions.add(buffer.uri, "plugins", Sanitizer.PERMS["allow"]);
} else {
    dactyl.echo("UNSET plugins permission for " + buffer.uri.host);
    services.permissions.remove(buffer.uri.host, "plugins");
}
EOF

" Unload current tab using BarTab {{{2
command! unload -description "Unload current tab" -js gBrowser.BarTabHandler.unloadTab(gBrowser.mCurrentTab)

" Get file list of debian package {{{2
command! dfl,debian-package-filelist
\ -description "Get Debian pkg filelist at packages.debian.org"
\ -complete custom,'[["squeeze", "old-stable"], ["wheezy", "stable"], ["jessie", "testing"], ["sid", "unstable"]]'
\ -nargs=+ -js <<EOF
let dist = "sid";
let pkg = "";
if (args.length === 1) {
    pkg = args[0];
} else {
    dist = args[0];
    pkg = args[1];
}
dactyl.open("http://packages.debian.org/" + dist + "/all/" + pkg + "/filelist", dactyl.NEW_TAB);
EOF

" emulate mouse click {{{2
command! click -nargs=? -count -js <<EOF
let mouse = 1;
let repeat = 2;
switch (count) {
    case 1:
        mouse = 1;
        repeat = 1;
        break;
    case 3:
        mouse = 3;
        repeat = 1;
        break;
    default:
}
io.run('xdotool', ['mousemove', '--polar', '0', '0', 'click', '--repeat', repeat.toString(), mouse.toString()]);
EOF
nmap -builtin -ex ,C <count>click

" use org-protocol to capture web content {{{2
command! orgcap -js <<EOF
org = 'org-protocol://capture://' + encodeURIComponent(buffer.URL.spec) + '/'
      + encodeURIComponent(buffer.title) + '/'
      + encodeURIComponent(content.getSelection().toString());
io.run('emacsclient', [org]);
EOF
nmap -builtin -ex a orgcap

" AutoCMD {{{1
"" set title to url
"autocmd LocationChange .* :set titlestring=<url>

"" use google to get lwn subscription link
autocmd -javascript PageLoad 'https://lwn.net/Articles/*' <<EOF
if (doc.title.match(/subscription/i)) {
    let title = doc.getElementsByClassName("ArticleText")[0].getElementsByTagName("a")[0].innerHTML;
    dactyl.open('gl site:lwn.net/SubscriberLink "' + title + '"');
}
EOF

" Style {{{1
"" zenburn
"hi StatusLineNormal color: white; background: #3f3f3f;
"hi StatusLineSecure color: white; background-color: #3f3f3f; background-image: linear-gradient(to right, #6ca0a3, #3f3f3f 60px);
"hi StatusLineExtended color: white; background-color: #3f3f3f; background-image: linear-gradient(to right, #7f9f7f, #3f3f3f 60px);
"hi StatusLineBroken color: white; background-color: #3f3f3f; background-image: linear-gradient(to right, #cc9393, #3f3f3f 60px);
"" darker
hi StatusLineNormal color: #afb8c5; background: #2f343f;
hi StatusLineSecure color: #afb8c5; background-color: #2f343f; background-image: linear-gradient(to right, #6ca0a3, #2f343f 60px);
hi StatusLineExtended color: #afb8c5; background-color: #2f343f; background-image: linear-gradient(to right, #7f9f7f, #2f343f 60px);
hi StatusLineBroken color: #afb8c5; background-color: #2f343f; background-image: linear-gradient(to right, #cc9393, #2f343f 60px);
hi ErrorMsg color: #afb8c5 !important; background-color: #2f343f !important; background-image: linear-gradient(to right, #cc9393, #2f343f 60px) !important;
"" from https://github.com/remiprev/pentadactyl-files/blob/master/colors/feline.penta
hi Hint line-height: 6px; text-shadow: 1px 1px 1px #000; padding: 5px 6px 6px; font-size: 13px; font-weight: normal; color: white; background-color: rgba(0, 0, 0, 0.6); border-radius: 1em; box-shadow: 0 0 4px rgba(0,0,0,1); text-transform: uppercase;
hi Hint[active] background: rgba(0, 0, 0, 0.8);
hi Hint[ambiguous] background: rgba(0, 0, 255, 0.6);
hi HintElem ;
hi HintActive border-radius: 6px; background-color: rgba(173, 216, 230, 0.6) !important;
"" from https://www.firefox.net.cn/read-34653
hi Filter border-radius: 3px; background: #ffec8b; border: 1px solid orange !important;
if config.OS.isWindows
hi FontFixed font-family: Consolas !important;
endif

" Misc {{{1
" ~ as pwd {{{2
silent cd ~

" plugins {{{2
set loadplugins='\.(css|js|penta)$'

" override :open {{{2
" try to guess if param of :open is a url, and add buffer to :open/tabopen complition
js <<EOF
overlay.overlayObject(dactyl, {
    open: function open(urls, params, force) {
        let isURL = function (url) {
            if (typeof url !== "string")
                return false;
            if (url.startsWith("google "))
                return false;
            if (url.startsWith("~/"))
                return true;
            let m = url.match(/^(\w+)\//);
            if (m)
                return (m[1] === "localhost");
            m = url.match(/^(?:[^.:\/ ]+\.)+([A-Za-z]+)($|\/)/);
            return (!m || m[1].match(/^(?:com|net|org|name|edu|gov|au|tw|cz|cn|us|me|info|co|jp|ly|gd|gl|de|fm|io)$/));
        };
        if (typeof urls === "string") {
            let matches = urls.match(/^(\d+): /);
            if (matches) {
                tabs.switchTo(urls, true);
                return true;
            }
        }
        if (!isURL(urls)) {
            arguments[0] = options["defsearch"] + " " + arguments[0];
        }
        return open.superapply(this, arguments);
    }
});
completion.addUrlCompleter("buffer", "Open Tabs", completion.buffer);
options["complete"].splice(0, 0, "buffer");
EOF

" custom hint {{{2
js <<EOF
let selectors = ["a[onmousedown]", "a[target='_blank']", "a[target='_self']", "a[href^='#!topic/']", "div.links_main"];
hints.addMode("g", "Follow specfic hint", function (elem) buffer.followLink(elem), null, selectors);
hints.addMode("G", "Follow specfic hint in a background tab", function (elem) buffer.followLink(elem, dactyl.NEW_BACKGROUND_TAB), null, selectors);
EOF
group -locations www.google.com,groups.google.com,duckduckgo.com customHint
nmap -builtin f ;G
nmap -builtin F g;G
group -locations groups.google.com customHintGoogleGroups
nmap -builtin f ;g
group user

" google docs viewer {{{2
js <<EOF
hints.addMode("d", "Open link using google docs", function (elem) dactyl.open("https://docs.google.com/viewer?url=" + encodeURIComponent(elem.href), dactyl.NEW_TAB), null, ["a[href*='.pdf']", "a[href*='.doc']", "a[href*='.ppt']", "a[href*='.odp']"]);
EOF

" display tabgroup title on statusline {{{2
js <<EOF
overlay.overlayObject(statusline, {
    updateTabCount: function updateTabCount(delayed) {
        updateTabCount.superapply(this, arguments);
        if (!delayed) {
            let title = "";
            let groups = services.sessionStore.getWindowValue(window, "tabview-groups");
            if (groups) {
                let active = JSON.parse(groups).activeGroupId;
                let groupData = services.sessionStore.getWindowValue(window, "tabview-group");
                title = JSON.parse(groupData)[active].title;
            }
            if (title) this.widgets.tabcount.value = "(" + title + ")" + this.widgets.tabcount.value;
        }
    }
});
EOF

" source bootstrap if modified {{{2
command bootstrap :runtime bootstrap
js <<EOF
let bootstrapFile = "bootstrap";
let bootstrapPref = "extensions.dactyl.bootstrapTime";
let file = io.File(IO.runtimePath + "/" + bootstrapFile);
if (file.exists() && file.isFile() && file.isReadable()) {
    let mtime = Math.floor(file.lastModifiedTime / 1000);
    let btime = prefs.get(bootstrapPref);
    if (!btime || mtime > btime) {
        dactyl.execute("runtime " + bootstrapFile);
        prefs.set(bootstrapPref, Math.floor(Date.now() / 1000));
    }
}
EOF

" change mode prompts {{{2
js <<EOF
overlay.overlayObject(modes, {
    _getModeMessage: function _getModeMessage() {
        let modeMap = {
            "-- EX --": "❯",
            "-- MENU --": "☰",
            "-- INSERT --": "▐",
            "-- CARET --": "⍲",
            "-- VISUAL --": "▒",
            "-- TEXT EDIT --": "█",
            "-- FIND FORWARD --": "⚲",
            "-- FIND BACKWARD --": "⚲"
        };
        let originModeMessage = _getModeMessage.superapply(this, arguments);
        let modeMessage = modeMap[originModeMessage];
        return modeMessage ? modeMessage : originModeMessage;
    }
});
EOF

" vim: set ft=pentadactyl fdm=marker:
